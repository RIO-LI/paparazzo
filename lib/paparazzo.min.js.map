{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///paparazzo.min.js","webpack:///webpack/bootstrap 4d763de02b8f4e97f60b","webpack:///./src/paparazzo.ts","webpack:///./src/index.ts"],"names":["root","factory","exports","module","define","amd","a","i","this","modules","__webpack_require__","moduleId","installedModules","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","isObject","target","isFunction","Paparazzo","config","eventsMap","onceEvenstMap","separator","assign","splitEventNames","eventName","names","split","filter","trim","length","addEventHandlers","handler","once","prepend","_this","forEach","handlers","Array","isArray","concat","processEvents","process","args","_i","arguments","apply","on","eventsMap_1","once_1","prepend_1","keys","eventNames","prependListener","prependOnceListener","emmiter","payload","off","onceEventNames","listeners","paparazzo_1"],"mappings":"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","file":"paparazzo.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isObject = function (target) {\n    return typeof target === 'object' && target != null;\n};\nvar isFunction = function (target) {\n    return typeof target === 'function';\n};\nvar Paparazzo = (function () {\n    function Paparazzo(config) {\n        this.eventsMap = {};\n        this.onceEvenstMap = {};\n        this.config = {\n            separator: ' ',\n        };\n        if (isObject(config)) {\n            this.config = Object.assign(this.config, config);\n        }\n    }\n    Paparazzo.prototype.splitEventNames = function (eventName) {\n        var names = eventName.split(this.config.separator ? this.config.separator : ' ');\n        names.filter(function (name) {\n            return (name.trim()).length > 0;\n        });\n        return names;\n    };\n    Paparazzo.prototype.addEventHandlers = function (eventName, handler, once, prepend) {\n        var _this = this;\n        if (!eventName) {\n            return this;\n        }\n        this.splitEventNames(eventName)\n            .forEach(function (name) {\n            if (!_this.eventsMap[name]) {\n                _this.eventsMap[name] = [];\n            }\n            var handlers = [];\n            if (!Array.isArray(handler)) {\n                handlers = [handler];\n            }\n            else {\n                handlers = handler;\n            }\n            if (isFunction(handler)) {\n                if (prepend) {\n                    _this.eventsMap[name] = (handlers || []).concat(_this.eventsMap[name] || []);\n                }\n                else {\n                    _this.eventsMap[name] = (_this.eventsMap[name] || []).concat(handlers);\n                }\n                if (once && !_this.onceEvenstMap.hasOwnProperty(name)) {\n                    _this.onceEvenstMap[name] = _this.eventsMap[name];\n                }\n            }\n        });\n        return this;\n    };\n    Paparazzo.prototype.processEvents = function (eventName, process) {\n        var _this = this;\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        this.splitEventNames(eventName)\n            .forEach(function (name) {\n            (_this.eventsMap[name] || []).forEach(function (handler) {\n                process.apply(void 0, [name, handler].concat(args));\n            });\n        });\n        return this;\n    };\n    Paparazzo.prototype.on = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (isObject(args[0])) {\n            var eventsMap_1 = args[0];\n            var once_1 = !!args[1];\n            var prepend_1 = !!args[2];\n            Object.keys(eventsMap_1).forEach(function (eventName) {\n                _this.addEventHandlers(eventName, eventsMap_1[eventName], once_1, prepend_1);\n            });\n        }\n        else {\n            var eventNames = args[0];\n            var handlers = args[1];\n            var once = !!args[2];\n            var prepend = !!args[3];\n            this.addEventHandlers(eventNames, handlers, once, prepend);\n        }\n        return this;\n    };\n    Paparazzo.prototype.prependListener = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.on.call(this, args[0], args[1], args[2], true);\n        return this;\n    };\n    Paparazzo.prototype.prependOnceListener = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return this.prependListener.call(this, args[0], args[1], true, true);\n    };\n    Paparazzo.prototype.once = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.on.call(this, args[0], args[1], true, false);\n        return this;\n    };\n    Paparazzo.prototype.emmiter = function (eventName, payload) {\n        var _this = this;\n        return this.processEvents(eventName, function (name, handler, payload) {\n            handler(payload);\n            if (_this.onceEvenstMap[name]) {\n                delete _this.onceEvenstMap[name];\n                delete _this.eventsMap[name];\n            }\n        }, payload);\n    };\n    Paparazzo.prototype.off = function (eventName) {\n        var _this = this;\n        return this.processEvents(eventName, function (name) {\n            delete _this.eventsMap[name];\n            if (_this.onceEvenstMap[name]) {\n                delete _this.onceEvenstMap[name];\n            }\n        });\n    };\n    Paparazzo.prototype.eventNames = function () {\n        return Object.keys(this.eventsMap);\n    };\n    Paparazzo.prototype.onceEventNames = function () {\n        return Object.keys(this.onceEvenstMap);\n    };\n    Paparazzo.prototype.listeners = function (eventName) {\n        return this.eventsMap[eventName] || [];\n    };\n    return Paparazzo;\n}());\nexports.Paparazzo = Paparazzo;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar paparazzo_1 = __webpack_require__(0);\nexports.Paparazzo = paparazzo_1.Paparazzo;\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// paparazzo.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4d763de02b8f4e97f60b","// 事件处理器类型\ntype EventHandler = (payload?: any) => void;\n\n// 事件哈希集合类型\ninterface EventsMap {\n    [propName: string]: EventHandler[] | EventHandler;\n}\n\n// Paparazzo实例对象配置类型\ninterface Config {\n    separator?: string; // 事件名分隔符\n    [propName: string]: any;\n}\n\n/**\n * 判断一个目标是否为对象类型\n * @param target 需要检测的目标对象\n * @returns boolean true表示是对象类型，false表示不是对象类型\n */\nconst isObject = (target: any): boolean => {\n    return typeof target === 'object' && target != null;\n};\n\n/**\n * 判断一个目标是否为函数类型\n * @param target 需要检测的目标对象\n * @returns boolean true表示是函数类型，false表示函数对象类型\n */\nconst isFunction = (target: any): boolean => {\n    return typeof target === 'function';\n};\n\nexport class Paparazzo {\n\n    // 存储事件处理器集合或事件处理器与事件名的map集合，\n    // key为事件名，value为事件处理器集合或事件处理器\n    private eventsMap: EventsMap = {};\n\n    // 存储一次性事件处理器集合或事件处理器与事件名的map集合\n    private onceEvenstMap: EventsMap = {};\n\n    // 配置对象\n    private config: Config = {\n        separator: ' ', // 事件名分隔符\n    };\n\n    constructor(config?: Config) {\n        if (isObject(config)) {\n            this.config = (Object as any).assign(this.config, config);\n        }\n    }\n\n    /**\n     * 根据事件名风格符对事件名字符串进行切割，默认风格符为空格\n     * @param eventName 事件名\n     */\n    private splitEventNames(eventName: string): string[] {\n        const names: string[] = eventName.split(this.config.separator ? this.config.separator : ' ');\n        names.filter((name: string) => {\n            return (name.trim()).length > 0;\n        });\n        return names;\n    }\n\n    /**\n     * 为指定事件添加处理器\n     * @param eventName  事件名\n     * @param handler 事件处理器或处理器集合\n     * @param once 是否只监听一次，true 表示是，false表示不是，默认为false\n     * @param prepend 是否将处理器添加到该事件处理器队列的最前方，true 表示是，false表示不是，默认为false\n     */\n    private addEventHandlers(eventName: string, handler: EventHandler[] | EventHandler, once?: boolean, prepend?: boolean): Paparazzo {\n        if (!eventName) {\n            return this;\n        }\n        this.splitEventNames(eventName)\n            .forEach((name: string) => {\n                if (!this.eventsMap[name]) {\n                    this.eventsMap[name] = [];\n                }\n                let handlers: EventHandler[] = [];\n                if (!Array.isArray(handler)) {\n                    handlers = [handler];\n                } else {\n                    handlers = handler;\n                }\n                if (isFunction(handler)) {\n                    if (prepend) {\n                        this.eventsMap[name] = (handlers || []).concat(this.eventsMap[name] || []);\n                    } else {\n                        this.eventsMap[name] = ((this.eventsMap[name] || []) as EventHandler[]).concat(handlers);\n                    }\n                    if (once && !this.onceEvenstMap.hasOwnProperty(name)) {\n                        this.onceEvenstMap[name] = this.eventsMap[name];\n                    }\n                }\n            });\n        return this;\n    }\n\n    /**\n     * 对事件的处理器进行迭代处理\n     * @param eventName 事件名,如果需要对多个事件进行监听，可以用事件分隔符隔开，默认为空格\n     * @param process 迭代处理\n     * @param args 迭代处理器的入参\n     */\n    private processEvents(eventName: string, process: any, ...args: any[]): Paparazzo {\n        this.splitEventNames(eventName)\n            .forEach((name: string) => {\n                (this.eventsMap[name] as EventHandler[] || []).forEach((handler: EventHandler) => {\n                    process(name, handler, ...args);\n                });\n            });\n        return this;\n    }\n\n    /**\n     * 对事件进行监听\n     * @param eventName 事件名,如果需要对多个事件进行监听，可以用事件分隔符隔开，默认为空格\n     * @param handlers 事件处理器或事件处理器集合\n     * @param once 是否只监听一次,true 表示是，false表示不是\n     * @param prepend 是否将处理器添加到该事件处理器队列的最前方，true 表示是，false表示不是，默认为false\n     */\n    public on(eventName: string, handlers: EventHandler[] | EventHandler, once?: boolean, prepend?: boolean): Paparazzo;\n\n    /**\n     * 对事件集合进行监听\n     * @param eventHandlersMap 事件集合对象，键为要监听的事件名，值为对应事件处理器\n     * @param once 是否只监听一次,true 表示是，false表示不是\n     * @param prepend 是否将处理器添加到该事件处理器队列的最前方，true 表示是，false表示不是，默认为false\n     */\n    public on(eventHandlersMap: EventsMap, once?: boolean, prepend?: boolean): Paparazzo;\n\n    /**\n     * 对指定事件进行监听\n     */\n    public on(...args: any[]): Paparazzo {\n        if (isObject(args[0])) {\n            const eventsMap: EventsMap = args[0];\n            const once: boolean = !!args[1];\n            const prepend: boolean = !!args[2];\n            Object.keys(eventsMap).forEach((eventName: string) => {\n                this.addEventHandlers(eventName, eventsMap[eventName], once, prepend);\n            });\n        } else {\n            const eventNames: string = args[0];\n            const handlers: EventHandler[] | EventHandler = args[1];\n            const once: boolean = !!args[2];\n            const prepend: boolean = !!args[3];\n            this.addEventHandlers(eventNames, handlers, once, prepend);\n        }\n        return this;\n    }\n\n    /**\n     * 对事件进行监听，并将处理器添加到该事件处理器队列的最前方\n     * @param eventName 事件名,如果需要对多个事件进行监听，可以用事件分隔符隔开，默认为空格\n     * @param handlers 事件处理器或事件处理器集合\n     * @param once 是否只监听一次\n     */\n    public prependListener(eventName: string, handlers: EventHandler[] | EventHandler, once?: boolean): Paparazzo;\n\n    /**\n     * 对事件进行监听，并将处理器添加到该事件处理器队列的最前方\n     * @param eventHandlersMap 事件集合对象，键为要监听的事件名，值为对应事件处理器\n     * @param once 是否只监听一次\n     */\n    public prependListener(eventHandlersMap: EventsMap, once?: boolean): Paparazzo;\n\n    /**\n     * 对事件进行监听，并将处理器添加到该事件处理器队列的最前方\n     */\n    public prependListener(...args: any[]): Paparazzo {\n        this.on.call(this, args[0], args[1], args[2], true);\n        return this;\n    }\n\n    /**\n     * 对事件进行一次性监听，并将处理器添加到该事件处理器队列的最前方\n     * @param eventName 事件名,如果需要对多个事件进行监听，可以用事件分隔符隔开，默认为空格\n     * @param handlers 事件处理器或事件处理器集合\n     */\n    public prependOnceListener(eventName: string, handlers: EventHandler[] | EventHandler): Paparazzo;\n\n    /**\n     * 对事件进行一次性监听，并将处理器添加到该事件处理器队列的最前方\n     * @param eventHandlersMap 事件集合对象，键为要监听的事件名，值为对应事件处理器\n     */\n    public prependOnceListener(eventHandlersMap: EventsMap): Paparazzo;\n\n    /**\n     * 对事件进行一次性监听，并将处理器添加到该事件处理器队列的最前方\n     */\n    public prependOnceListener(...args: any[]): Paparazzo {\n        return this.prependListener.call(this, args[0], args[1], true, true);\n    }\n\n    /**\n     * 对事件进行监听\n     * @param eventName 事件名,如果需要对多个事件进行监听，可以用事件分隔符隔开，默认为空格\n     * @param handlers 事件处理器或事件处理器集合\n     */\n    public once(eventName: string, handlers: EventHandler[] | EventHandler): Paparazzo;\n\n    /**\n     * 对事件集合进行监听\n     * @param eventHandlersMap 事件集合对象，键为要监听的事件名，值为对应事件处理器\n     */\n    public once(eventHandlersMap: EventsMap): Paparazzo;\n\n    /**\n     * 对指定事件进行一次性监听，当事件触发后，事件将从事件处理中移除\n     */\n    public once(...args: any[]): Paparazzo {\n        this.on.call(this, args[0], args[1], true, false);\n        return this;\n    }\n\n    /**\n     * 触发指定事件并发送相关数据\n     * @param eventName 事件名，如果需要对多个事件进行触发时，可以用事件分隔符隔开，默认为空格\n     * @param payload 事件需要处理的数据\n     */\n    public emmiter(eventName: string, payload?: any): Paparazzo {\n        return this.processEvents(eventName, (name: string, handler: EventHandler, payload: any) => {\n            handler(payload);\n            // 如果是一次性事件，触发事件后将事件从事件队列中移除\n            if (this.onceEvenstMap[name]) {\n                delete this.onceEvenstMap[name];\n                delete this.eventsMap[name];\n            }\n        }, payload);\n    }\n\n    /**\n     * 对指定事件进行移除\n     * @param eventName 事件名，如果需要对多个事件名进行触发时，可以用事件分隔符隔开，默认为空格\n     */\n    public off(eventName: string): Paparazzo {\n        return this.processEvents(eventName, (name: string) => {\n            delete this.eventsMap[name];\n            if (this.onceEvenstMap[name]) {\n                delete this.onceEvenstMap[name];\n            }\n        });\n    }\n\n    /**\n     * 获取全部监听的事件名\n     */\n    public eventNames(): string[] {\n        return Object.keys(this.eventsMap);\n    }\n\n    /**\n     * 获取全部监听的事件名\n     */\n    public onceEventNames(): string[] {\n        return Object.keys(this.onceEvenstMap);\n    }\n\n    /**\n     * 获取指定事件名的处理器集合\n     * @param eventName 事件名\n     */\n    public listeners(eventName: string): EventHandler[] {\n        return this.eventsMap[eventName] as EventHandler[] || [];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--1!./src/paparazzo.ts","export { Paparazzo } from './paparazzo';\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--1!./src/index.ts"],"sourceRoot":""}